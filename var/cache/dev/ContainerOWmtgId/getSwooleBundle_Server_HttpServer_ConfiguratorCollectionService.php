<?php

namespace ContainerOWmtgId;

use Symfony\Component\DependencyInjection\Argument\RewindableGenerator;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;

/**
 * @internal This class has been auto-generated by the Symfony Dependency Injection Component.
 */
class getSwooleBundle_Server_HttpServer_ConfiguratorCollectionService extends App_KernelDevDebugContainer
{
    /**
     * Gets the private 'swoole_bundle.server.http_server.configurator_collection' shared autowired service.
     *
     * @return \K911\Swoole\Component\GeneratedCollection
     */
    public static function do($container, $lazyLoad = true)
    {
        include_once \dirname(__DIR__, 4).'/vendor/k911/swoole-bundle/src/Component/GeneratedCollection.php';

        return $container->privates['swoole_bundle.server.http_server.configurator_collection'] = new \K911\Swoole\Component\GeneratedCollection(new RewindableGenerator(function () use ($container) {
            yield 0 => ($container->privates['K911\\Swoole\\Server\\Configurator\\WithHttpServerConfiguration'] ?? $container->load('getWithHttpServerConfigurationService'));
            yield 1 => ($container->privates['K911\\Swoole\\Server\\Configurator\\WithServerShutdownHandler'] ?? $container->load('getWithServerShutdownHandlerService'));
            yield 2 => ($container->privates['K911\\Swoole\\Server\\Configurator\\WithServerStartHandler'] ?? $container->load('getWithServerStartHandlerService'));
            yield 3 => ($container->privates['K911\\Swoole\\Server\\Configurator\\WithServerManagerStartHandler'] ?? $container->load('getWithServerManagerStartHandlerService'));
            yield 4 => ($container->privates['K911\\Swoole\\Server\\Configurator\\WithServerManagerStopHandler'] ?? $container->load('getWithServerManagerStopHandlerService'));
            yield 5 => ($container->privates['K911\\Swoole\\Server\\Configurator\\WithWorkerStartHandler'] ?? $container->load('getWithWorkerStartHandlerService'));
            yield 6 => ($container->privates['K911\\Swoole\\Server\\Configurator\\WithTaskHandler'] ?? $container->load('getWithTaskHandlerService'));
            yield 7 => ($container->privates['K911\\Swoole\\Server\\Configurator\\WithTaskFinishedHandler'] ?? $container->load('getWithTaskFinishedHandlerService'));
            yield 8 => ($container->privates['K911\\Swoole\\Server\\Api\\WithApiServerConfiguration'] ?? $container->load('getWithApiServerConfigurationService'));
        }, 9));
    }
}
